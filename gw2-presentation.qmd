---
title: "Visualizing Time Series"
subtitle: "Guided Workshop 2"
author: "Group 2"
format: 
  revealjs:
    theme: sky
editor: visual
execute: 
  echo: true
---

# Preliminaries

------------------------------------------------------------------------

Loading the libraries needed for the activity.

```{r}
#| warning: false
#| message: false

library(ggplot2)
library(tidyverse)
library(ggpmisc)
library(dplyr)
```

------------------------------------------------------------------------

Creating the `covid` dataset.

```{r}
#| message: false
#| warning: false

covid_raw <- read.csv("C:/Users/mildo/Downloads/covid.csv")
covid_raw <- covid_raw[c('AgeGroup','Sex','DateRepConf','RegionRes')]
covid_raw$DateRepConf <- as.Date(covid_raw$DateRepConf) 
covid_raw$Count <- rep(1,nrow(covid_raw))
covid <- covid_raw |>
  group_by(RegionRes, DateRepConf) |>
  summarise(Count = sum(Count)) |>
  ungroup()
```

# Plotting Exercise 1

------------------------------------------------------------------------

1.  Generate a modified plot of the time series data for the confirmed cases in CAR. Save this plot in a file named “Covid_cases_CAR.pdf”.

------------------------------------------------------------------------

Creating the `covid_car` dataset.

```{r}
covid_car <- covid |> 
  filter(RegionRes == "CAR") |>
  group_by(DateRepConf = DateRepConf) |>
  ungroup()
```

------------------------------------------------------------------------

Creating the plot.

```{r}
#| output-location: slide
#| fig-width: 10
#| fig-height: 6

covid_car |>
  ggplot(aes(DateRepConf, Count)) +
  geom_point(pch = 20, color = "violet", size = 5) +
  geom_line(lwd = 1, color = "red") +
  labs(
    title = "Covid Cases in CAR",
    x = "Date",
    y = "Confirmed Cases"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 25),
    axis.title.x = element_text(size = 20),
    axis.title.y = element_text(size = 20),
    axis.text = element_text(size = 16)
  )
```

------------------------------------------------------------------------

Saving it as a pdf file.

```{r}
#| eval: false
#| output: false

pdf("Covid_cases_CAR.pdf")
covid_car |>
  ggplot(aes(DateRepConf, Count)) +
  geom_point(pch = 20, color = "violet", size = 5) +
  geom_line(lwd = 1, color = "red") +
  labs(
    title = "Covid Cases in CAR",
    x = "Date",
    y = "Confirmed Cases"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 25),
    axis.title.x = element_text(size = 20),
    axis.title.y = element_text(size = 20),
    axis.text = element_text(size = 16)
  )
dev.off()
```

------------------------------------------------------------------------

2.  Generate a modified plot of the time series data for the confirmed cases in all regions of the Philippines. Create a personalized color library and use this to differentiate the time series for each region. Save this plot in a file named “Covid_cases_All_Regions.pdf”.

------------------------------------------------------------------------

Creating the plot.

```{r}
#| output-location: slide
#| fig-width: 10
#| fig-height: 6

covid |>
  ggplot(aes(DateRepConf, Count, color = as.factor(RegionRes))) +
  geom_line() +
  labs(
    title = "Covid Cases by Region",
    x = "Date",
    y = "Confirmed Cases",
    color = "Region"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 25),
    axis.title.x = element_text(size = 20),
    axis.title.y = element_text(size = 20),
    axis.text = element_text(size = 16),
    legend.title = element_text(size = 20), 
    legend.text = element_text(size = 12)
  )
```

------------------------------------------------------------------------

Saving it as a pdf file.

```{r}
#| eval: false
#| output: false

pdf("Covid_cases_All_Regions.pdf")
covid |>
  ggplot(aes(DateRepConf, Count, color = as.factor(RegionRes))) +
  geom_line() +
  labs(
    title = "Covid Cases by Region",
    x = "Date",
    y = "Confirmed Cases",
    color = "Region"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 25),
    axis.title.x = element_text(size = 20),
    axis.title.y = element_text(size = 20),
    axis.text = element_text(size = 16),
    legend.title = element_text(size = 20), 
    legend.text = element_text(size = 12)
  )
dev.off()
```

# Plotting Exercise 2

------------------------------------------------------------------------

1.  Generate a modified SINGLE plot of ALL the time series data for the confirmed cases in the four regions included in the data. Save this plot in a file named “Covid_cases_NL.pdf”.

------------------------------------------------------------------------

Creating the `covid_NL` dataset.

```{r}
#| message: false
#| warning: false

covid_NL <- covid_raw |>
  group_by(AgeGroup, RegionRes, DateRepConf) |>
  summarise(Count = sum(Count)) |>
  ungroup()
```

Filtering `covid_NL` according to specific regions and specific age groups.

```{r}
covid_NL <- covid_NL |>
  filter(
    RegionRes %in%
      c('CAR','Region I: Ilocos Region',
        'Region II: Cagayan Valley',
        'Region III: Central Luzon'),
    AgeGroup %in%
      c('10 to 14', '25 to 29',
        '40 to 44', '60 to 64')
  )
```

------------------------------------------------------------------------

Creating the plot.

```{r}
#| output-location: slide
#| fig-width: 10
#| fig-height: 6

covid_NL |>
  ggplot(aes(DateRepConf, Count, color = as.factor(RegionRes))) +
  geom_line() +
  labs(
    title = "Covid Cases by Regions in Northern Luzon",
    x = "Date",
    y = "Confirmed Cases",
    color = "Region"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 25),
    axis.title.x = element_text(size = 20),
    axis.title.y = element_text(size = 20),
    axis.text = element_text(size = 16),
    legend.title = element_text(size = 20), 
    legend.text = element_text(size = 12)
  )
```

------------------------------------------------------------------------

Saving it as a pdf file.

```{r}
#| eval: false
#| output: false

pdf("Covid_cases_NL.pdf")
covid_NL |>
  ggplot(aes(DateRepConf, Count, color = as.factor(RegionRes))) +
  geom_line() +
  labs(
    title = "Covid Cases by Regions in Northern Luzon",
    x = "Date",
    y = "Confirmed Cases",
    color = "Region"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 25),
    axis.title.x = element_text(size = 20),
    axis.title.y = element_text(size = 20),
    axis.text = element_text(size = 16),
    legend.title = element_text(size = 20), 
    legend.text = element_text(size = 12)
  )
dev.off()
```

------------------------------------------------------------------------

2.  Use the `facet_wrap` function to generate four plots containing the time series data for the confirmed cases in all regions in the subset data. Save this plot in a file named “Covid_cases_NL_facet.pdf”.

------------------------------------------------------------------------

Creating the plot.

```{r}
#| output-location: slide
#| fig-width: 10
#| fig-height: 6

covid_NL |>
  ggplot(aes(DateRepConf, Count, color=as.factor(AgeGroup))) +
  geom_line(aes(DateRepConf, Count)) +
  facet_wrap(~RegionRes, ncol = 1) +
  guides(color = guide_legend(title = "Age Group")) +
  labs(
    title = "Covid Cases By Regions in Northern Luzon",
    x = "Date",
    y = "Confirmed Cases"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size=25),
    axis.title.x = element_text(size=20),
    axis.title.y = element_text(size=20),
    axis.text = element_text(size=16),
    strip.text = element_text(size = 16),
    legend.title = element_text(size = 20), 
    legend.text = element_text(size = 12)
  )
```

------------------------------------------------------------------------

Saving it as a pdf file.

```{r}
#| eval: false
#| output: false

pdf("Covid_cases_NL_facet.pdf")
covid_NL |>
  ggplot(aes(DateRepConf, Count, color=as.factor(AgeGroup))) +
  geom_line(aes(DateRepConf, Count)) +
  facet_wrap(~RegionRes, ncol = 1) +
  guides(color = guide_legend(title = "Age Group")) +
  labs(
    title = "Covid Cases By Regions in Northern Luzon",
    x = "Date",
    y = "Confirmed Cases"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size=23),
    axis.title.x = element_text(size=20),
    axis.title.y = element_text(size=20),
    axis.text = element_text(size=16),
    strip.text = element_text(size = 16),
    legend.title = element_text(size = 20), 
    legend.text = element_text(size = 12)
  )
dev.off
```

# Extra

------------------------------------------------------------------------

Creating the `covid_MF` dataset.

```{r}
#| message: false
#| warning: false

covid_MF <- covid_raw |>
  group_by(AgeGroup, Sex, RegionRes, DateRepConf) |>
  summarise(Count = sum(Count)) |>
  ungroup()
```

Filtering the `covid_MF` dataset.

```{r}
covid_MF <- covid_MF |>
  filter(
    AgeGroup == '25 to 29',
    RegionRes == 'Region II: Cagayan Valley'
  )
```

------------------------------------------------------------------------

Creating the plot

```{r}
#| output-location: slide
#| fig-width: 10
#| fig-height: 6

covid_MF |>
  ggplot(aes(DateRepConf, Count, color = as.factor(Sex))) +
  geom_line() +
  labs(
    title = "Covid Cases by Sex for Ages 25 to 29 in Region II",
    x = "Date",
    y = "Confirmed Cases",
    color = "Sex"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 23),
    axis.title.x = element_text(size = 20),
    axis.title.y = element_text(size = 20),
    axis.text = element_text(size = 16),
    legend.title = element_text(size = 20), 
    legend.text = element_text(size = 12)
  )
```

------------------------------------------------------------------------

## Orville D. Hombrebueno

odhombrebueno\@nvsu.edu.ph

-   [CTE, Nueva Vizcaya State University](https://www.nvsu.edu.ph/)

-   [GitHub](https://github.com/ellivromvvn)

-   [Fosstodon](https://fosstodon.org/@mildorville)

-   [X](https://twitter.com/odhombrebueno)

[Quarto](https://quarto.org/)

# Thank you!
